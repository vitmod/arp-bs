#
# basic ENVIRONMENT
#

# sometimes sbin progs are missing
export PATH := $(PATH):/usr/sbin:/sbin

# default target
SETUP: Makefile
	./git_clone.sh
	@echo
	@echo ----------------------------------------------------------------------------
	@echo main build system Makefile has been generated
	@echo to enable bash-completion run \'source make-completion.sh\'
	@echo to build image run \'make target-image\'
	@echo you may reconfigure anytime with \'make xconfig\' or \'make menuconfig\'
	@echo to rebuild brocken Makefile fallback to \'make -f Makefile.setup\'
	@echo to get info about more targets run \'make help\'
	@echo
	@echo good luck
	@echo your AR-P team
	@echo ----------------------------------------------------------------------------

# '::' means you can append rules to help target
help::
	@echo
	@echo ----------------------------------------------------------------------------
	@cat logo.txt
	@echo ----------------------------------------------------------------------------
	@echo run \'make\' to see some info about common targets and this system
	@echo run \'make help-functions\' to see defined macroses.

help-functions::
	@echo
	@echo ----------------------------------------------------------------------------
	@echo list of documented functions and their parameters ...
	@echo ... we are too lazy to complete this list

.PHONY: SETUP help help-functions

#
# KCONFIG
#

CONFIG_CONFIG_IN = Config.in

# select remote or local kconfig sources
# CONFIG = config_wizard
CONFIG = kconfig_frontends

# configuration tools
# ----------------------------------------------------------------------------
ifeq ($(CONFIG),config_wizard)

$(CONFIG)/config.status:
	cd $(CONFIG) && ./configure

$(CONFIG)/conf $(CONFIG)/mconf $(CONFIG)/qconf $(CONFIG)/gconf: $(CONFIG)/config.status
	cd $(CONFIG) && $(MAKE)
	ln -sf frontends/conf/conf $(CONFIG)/conf
	ln -sf frontends/nconf/nconf $(CONFIG)/nconf
	ln -sf frontends/mconf/mconf $(CONFIG)/mconf
	ln -sf frontends/qconf/qconf $(CONFIG)/qconf
	ln -sf frontends/gconf/gconf $(CONFIG)/gconf

kconfig-clean:
	$(MAKE) -C $(CONFIG) clean

endif

ifeq ($(CONFIG),kconfig_frontends)

kconfig_PN := kconfig-frontends
kconfig_PV := 3.12.0.0

$(kconfig_PN)-$(kconfig_PV).tar.bz2:
	wget http://ymorin.is-a-geek.org/download/$(kconfig_PN)/$@ || \
	wget http://ptxdist.sat-universum.de/$@

$(CONFIG)/config.status: $(kconfig_PN)-$(kconfig_PV).tar.bz2
	tar -xjf $^
	rm -rf $(CONFIG)
	mv $(kconfig_PN)-$(kconfig_PV) $(CONFIG)
	cd $(CONFIG) && ./configure

$(CONFIG)/conf $(CONFIG)/mconf $(CONFIG)/qconf $(CONFIG)/gconf: $(CONFIG)/config.status
	cd $(CONFIG) && $(MAKE)
	ln -sf frontends/conf/conf $(CONFIG)/conf
	ln -sf frontends/mconf/nconf $(CONFIG)/nconf
	ln -sf frontends/mconf/mconf $(CONFIG)/mconf
	ln -sf frontends/qconf/qconf $(CONFIG)/qconf
	ln -sf frontends/gconf/gconf $(CONFIG)/gconf

kconfig-clean:
	$(MAKE) -C $(CONFIG) clean

kconfig-distclean: kconfig-clean
	$(MAKE) -C $(CONFIG) distclean

endif

# configuration exec
# ----------------------------------------------------------------------------

run_menuconfig: $(CONFIG)/mconf
	@$(CONFIG)/mconf $(CONFIG_CONFIG_IN)
	@echo Ctrl+C to abort
	@$(CONFIG)/conf --oldconfig $(CONFIG_CONFIG_IN)

run_xconfig: $(CONFIG)/qconf
	test -f $(CONFIG)/qconf && $(CONFIG)/qconf $(CONFIG_CONFIG_IN) || $(CONFIG)/gconf $(CONFIG_CONFIG_IN)
	@echo Ctrl+C to abort
	@$(CONFIG)/conf --oldconfig $(CONFIG_CONFIG_IN)

config: $(CONFIG)/conf
	@$(CONFIG)/conf $(CONFIG_CONFIG_IN)

run_oldconfig: $(CONFIG)/conf
	@$(CONFIG)/conf --oldconfig $(CONFIG_CONFIG_IN)

randconfig: $(CONFIG)/conf
	@$(CONFIG)/conf -r $(CONFIG_CONFIG_IN)

allyesconfig: $(CONFIG)/conf
	#@$(CONFIG)/conf -y $(CONFIG_CONFIG_IN)
	#sed -i -e "s/^CONFIG_DEBUG.*/# CONFIG_DEBUG is not set/" .config
	@$(CONFIG)/conf -o $(CONFIG_CONFIG_IN)

allnoconfig: $(CONFIG)/conf
	@$(CONFIG)/conf -n $(CONFIG_CONFIG_IN)

defconfig: $(CONFIG)/conf
	@$(CONFIG)/conf -d $(CONFIG_CONFIG_IN)


menuconfig: run_menuconfig SETUP
xconfig: run_xconfig SETUP
oldconfig: run_oldconfig SETUP

.PHONY: kconfig-clean kconfig-distclean \
        run_menuconfig run_oldconfig run_xconfig \
        menuconfig xconfig config oldconfig randconfig allyesconfig allnoconfig defconfig

#
# GNU make 4
#

make_PN := make
make_PV := 4.0
make_DIR := make-$(make_PV)

$(make_PN)-$(make_PV).tar.gz:
	wget http://ftp.gnu.org/gnu/$(make_PN)/$@

$(make_DIR)/config.status: $(make_PN)-$(make_PV).tar.gz
	rm -rf $(make_DIR)
	tar -xzf $^
	cd $(make_DIR) && ./configure && make

make-clean:
	$(MAKE) -C $(make_DIR) clean
make-distclean:
	rm -rf $(make_DIR)
.PHONY: make-clean make-distclean

#
# create buildsystem Makefile
#

.PRECIOUS: Makefile

make/local/%.in:
	touch make/local/Makefile.in
	mkdir -p make/local/template
	touch make/local/template/Makefile.in
make/local/%.mk:
	touch make/local/local.mk
	mkdir -p make/local/template
	touch make/local/template/template.mk

Makefile.pre: \
  Makefile.setup \
  .config \
  make/buildenv.mk \
  make/base.mk \
  make/base-rpm.mk \
  make/config.mk \
  make/host/*.in \
  make/host/*/*.in \
  make/cross/*.in \
  make/cross/*/*.in \
  make/target/*.in \
  make/target/*/*.in \
  make/local/*.in \
  make/local/*/*.in \
  make/host/*.mk \
  make/host/*/*.mk \
  make/cross/*.mk \
  make/cross/*/*.mk \
  make/target/*.mk \
  make/target/*/*.mk \
  make/local/*.mk \
  make/local/*/*.mk \
  make/archive-specs.mk

	echo "# Automatically generated file; DO NOT EDIT." > $@
	for f in $^; do \
		echo >> $@ && \
		echo "#---------------------------------------------------------" >> $@ && \
		echo "_thisfile := $$f"                                  >> $@ && \
		echo "#---------------------------------------------------------" >> $@ && \
		cat $$f >> $@; \
	done

Makefile: smart-rules.pl Makefile.pre
	./smart-rules.pl Makefile.pre || (rm -f $@ && false)

.config: Config.in
	@echo ----------------------------------------------------------------------------
	@echo outdated .config
	@echo launch make -f Makefile.setup menuconfig
	@echo or
	@echo launch make -f Makefile.setup xconfig
	@echo
	@echo if you are shure that your .config is ok
	@echo launch make -f Makefile.setup oldconfig
	@echo ----------------------------------------------------------------------------
	@false
