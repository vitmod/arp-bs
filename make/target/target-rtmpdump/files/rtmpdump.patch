--- a/librtmp/rtmp.c
+++ b/librtmp/rtmp.c
@@ -950,6 +950,24 @@
   r->m_sb.sb_socket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
   if (r->m_sb.sb_socket != -1)
     {
+      /* set timeout */
+      {
+        SET_RCVTIMEO(tv, r->Link.timeout);
+        if (setsockopt
+            (r->m_sb.sb_socket, SOL_SOCKET, SO_RCVTIMEO, (char *)&tv, sizeof(tv)))
+          {
+            RTMP_Log(RTMP_LOGERROR, "%s, Setting socket receive timeout to %ds failed!",
+	        __FUNCTION__, r->Link.timeout);
+          }
+        if (setsockopt
+            (r->m_sb.sb_socket, SOL_SOCKET, SO_SNDTIMEO, (char *)&tv, sizeof(tv)))
+          {
+            RTMP_Log(RTMP_LOGERROR, "%s, Setting socket send timeout to %ds failed!",
+	        __FUNCTION__, r->Link.timeout);
+          }
+      }
+      setsockopt(r->m_sb.sb_socket, IPPROTO_TCP, TCP_NODELAY, (char *) &on, sizeof(on));
+
       if (connect(r->m_sb.sb_socket, service, sizeof(struct sockaddr)) < 0)
 	{
 	  int err = GetSockError();
@@ -977,18 +995,6 @@
       return FALSE;
     }
 
-  /* set timeout */
-  {
-    SET_RCVTIMEO(tv, r->Link.timeout);
-    if (setsockopt
-        (r->m_sb.sb_socket, SOL_SOCKET, SO_RCVTIMEO, (char *)&tv, sizeof(tv)))
-      {
-        RTMP_Log(RTMP_LOGERROR, "%s, Setting socket timeout to %ds failed!",
-	    __FUNCTION__, r->Link.timeout);
-      }
-  }
-
-  setsockopt(r->m_sb.sb_socket, IPPROTO_TCP, TCP_NODELAY, (char *) &on, sizeof(on));
   if (r->Link.protocol & RTMP_FEATURE_HTTP)
     setsockopt(r->m_sb.sb_socket, SOL_SOCKET, SO_KEEPALIVE, (char *) &on, sizeof (on));
