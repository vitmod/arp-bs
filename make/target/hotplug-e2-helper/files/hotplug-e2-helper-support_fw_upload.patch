--- hotplug-e2-helper/hotplug.c.org	2012-04-01 04:41:07.000000000 -0700
+++ hotplug-e2-helper/hotplug.c	2012-04-01 12:42:50.055747951 -0700
@@ -7,18 +7,126 @@
 #include <netdb.h>
 #include <fcntl.h>
 #include <string.h>
+#include <errno.h>
+#include <sys/mman.h>
+#include <sys/stat.h>
+
+
+static int fw_open(const char *fmt, const char *str, int flags)
+{
+	char path[strlen(fmt) - strlen("%s") + strlen(str) + 1];
+	int fd;
+
+	snprintf(path, sizeof(path), fmt, str);
+	path[sizeof(path) - 1] = '\0';
+
+	fd = open(path, flags);
+	if (fd == -1) {
+		printf("can't open '%s': %s", path, strerror(errno));
+		return -1;
+	}
+
+	return fd;
+}
+
+static int fw_write(int fd, const char *buf, size_t count)
+{
+	size_t off;
+	ssize_t ret;
+
+	for (off = 0; off < count; off += ret) {
+		ret = write(fd, &buf[off], count - off);
+		if (ret < 0) {
+			printf("write failed: %s", strerror(errno));
+			return -1;
+		}
+	}
+
+	return count;
+}
+
+int firmware_add(void)
+{
+	char *devpath_env;
+	char *firmware_env;
+	int load_fd = -1;
+	int src_fd = -1;
+	int dst_fd = -1;
+	void *src_ptr = MAP_FAILED;
+	struct stat st;
+	int ret = 0;
+
+	devpath_env = getenv("DEVPATH");
+	firmware_env = getenv("FIRMWARE");
+	printf("DEVPATH='%s', FIRMWARE = '%s'", devpath_env, firmware_env);
+	if ((devpath_env == NULL) ||
+	    (firmware_env == NULL)) {
+		printf("missing an environment variable, aborting.");
+		return 1;
+	}
+
+	load_fd = fw_open("/sys%s/loading", devpath_env, O_WRONLY);
+	src_fd = fw_open("/lib/firmware/%s", firmware_env, O_RDONLY);
+	dst_fd = fw_open("/sys%s/data", devpath_env, O_WRONLY);
+	if ((load_fd == -1) || (src_fd == -1) || (dst_fd == -1))
+		goto err;
+
+	if (fstat(src_fd, &st) == -1) {
+		printf("stat failed: %s", strerror(errno));
+		goto err;
+	}
+
+	src_ptr = mmap(NULL, st.st_size, PROT_READ, MAP_SHARED, src_fd, 0);
+	if (src_ptr == MAP_FAILED) {
+		printf("mmap failed: %s", strerror(errno));
+		goto err;
+	}
+
+	if (fw_write(load_fd, "1", 1) == -1)
+		goto err;
+	if (fw_write(dst_fd, src_ptr, st.st_size) == -1)
+		goto err;
+	if (fw_write(load_fd, "0", 1) == -1)
+		goto err;
+
+	goto cleanup;
+err:
+	ret = 1;
+	if (load_fd != -1)
+		fw_write(load_fd, "-1", 2);
+cleanup:
+	if (src_ptr != MAP_FAILED)
+		munmap(src_ptr, st.st_size);
+	if (dst_fd != -1)
+		close(dst_fd);
+	if (src_fd != -1)
+		close(src_fd);
+	if (load_fd != -1)
+		close(load_fd);
+
+	return ret;
+}
 
 int main(int argc, char *argv[])
 {
 	const char *action = NULL, *devpath = NULL, *physdevpath = NULL, *mediastatus = NULL;
 	int sd = -1;
 	struct sockaddr_un serv_addr_un;
+
+	// Take care of firmware loading
+	if (!strncmp(argv[1], "firmware", 8))
+	{
+		firmware_add();
+		return 0;
+	}
+
 	if (argc > 3)
 	{
 		action = argv[1];
 		devpath = argv[2];
 		physdevpath = argv[3];
 	}
+
 	memset(&serv_addr_un, 0, sizeof(serv_addr_un));
 	serv_addr_un.sun_family = AF_LOCAL;
 	strcpy(serv_addr_un.sun_path, "/tmp/hotplug.socket");
